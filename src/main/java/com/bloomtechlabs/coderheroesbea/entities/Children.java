package com.bloomtechlabs.coderheroesbea.entities;

import javax.persistence.*;

@Entity
@Table(name = "children")
public class Children {
    private int child_id;
    private Profiles profile;
    private String username;
    private int age;
    private Parents parents;

    /**
     * Constructor.
     * Default constructor is required to have Hibernate initialize the entity.
     */
    public Children() {

    }

    /**
     * Constructor with child_id.
     * @param child_id - primary key, auto-increments, generated by database
     */
    public Children(int child_id) {
        this.child_id = child_id;
    }

    /**
     * Constructor with all fields.
     * @param child_id - primary key, auto-increments, generated by database
     * @param profile  - required, foreign key
     * @param username - string (not null)
     * @param age      - integer (not null)
     * @param parents  - required, foreign key
     */
    public Children(int child_id, Profiles profile, String username, int age, Parents parents) {
        this.child_id = child_id;
        this.profile = profile;
        this.username = username;
        this.age = age;
        this.parents = parents;
    }

    @Id
    @Column(name = "child_id")
    public int getChild_id() {
        return child_id;
    }

    public void setChild_id(int child_id) {
        this.child_id = child_id;
    }

    @OneToOne(cascade = CascadeType.REMOVE)
    @JoinColumn(name = "profile_id", referencedColumnName = "profile_id", nullable = false, unique = true)
    public Profiles getProfile() {
        return profile;
    }

    public void setProfile(Profiles profile) {
        this.profile = profile;
    }

    @Column(name = "username", nullable = false)
    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Column(name = "age", nullable = false)
    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    @OneToOne(cascade = CascadeType.REMOVE)
    @JoinColumn(name = "parent_id", referencedColumnName = "parent_id", nullable = false)
    public Parents getParents() {
        return parents;
    }

    public void setParents(Parents parents) {
        this.parents = parents;
    }
}
